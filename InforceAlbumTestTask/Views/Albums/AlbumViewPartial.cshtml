@model InforceAlbumTestTask.Models.Album
@{
    ViewBag.Title = "Album View";

    var user = ViewBag.User as InforceAlbumTestTask.Models.User;
    bool isAuthenticated = user != null;
    bool isAdmin = isAuthenticated && user.UserType == InforceAlbumTestTask.Models.UserType.Admin;
    bool isAuthorizedUser = isAuthenticated && user.UserType == InforceAlbumTestTask.Models.UserType.AuthorizedUser;

    int currentPage = ViewBag.CurrentPage;
    int totalPages = ViewBag.TotalPages;

    var paginatedImages = Model.Images as List<InforceAlbumTestTask.Models.Image>;
}

<title>Album: @Model.Title</title>

<style>
    h2 {
        text-align: center;
        margin-bottom: 30px;
        font-size: 28px;
        font-weight: bold;
        color: #2c3e50;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 40px;
        background-color: #ffffff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    }

    .table th, .table td {
        padding: 15px;
        text-align: center;
        vertical-align: middle;
    }

    .table thead {
        background-color: #f8f9fa;
        color: #34495e;
        font-weight: 600;
    }

    .table img {
        width: 100px;
        height: auto;
        border-radius: 8px;
        transition: transform 0.3s ease;
    }

        .table img:hover {
            transform: scale(1.05);
            box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);
        }

    .btn-group {
        display: flex;
        gap: 5px;
        justify-content: center;
        flex-wrap: wrap;
    }

    .btn {
        font-size: 0.875rem;
        padding: 6px 10px;
        border-radius: 6px;
        border: none;
        transition: all 0.2s ease;
        cursor: pointer;
    }

    .btn-success {
        background-color: #28a745;
        color: white;
    }

        .btn-success:hover {
            background-color: #218838;
        }

    .btn-warning {
        background-color: #ffc107;
        color: black;
    }

        .btn-warning:hover {
            background-color: #e0a800;
        }

    .btn-danger {
        background-color: #dc3545;
        color: white;
    }

        .btn-danger:hover {
            background-color: #c82333;
        }

    /* Пагінація */
    .pagination {
        display: flex;
        justify-content: center;
        list-style: none;
        padding-left: 0;
        margin-top: 30px;
    }

    .page-item {
        margin: 0 5px;
    }

        .page-item .page-link {
            display: block;
            padding: 8px 14px;
            background-color: #fff;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            color: #007bff;
            text-decoration: none;
            transition: background-color 0.3s ease;
        }

            .page-item .page-link:hover {
                background-color: #e9ecef;
                color: #0056b3;
            }

        .page-item.active .page-link {
            background-color: #007bff;
            border-color: #007bff;
            color: #fff;
            font-weight: bold;
        }

</style>

<h2>Album: @Model.Title</h2>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Thumbnail</th>
            <th>Title</th>
            <th>Likes</th>
            <th>Dislikes</th>
            @if (isAuthorizedUser || isAdmin)
            {
                <th>Actions</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var image in paginatedImages)
        {
            <tr>
                <td>
                    <a href="@image.ImageUrl" target="_blank">
                        <img src="@image.ImageUrl" alt="Thumbnail" style="width:100px;" />
                    </a>
                </td>
                <td>@image.Title</td>
                <td>@image.LikeCounter</td>
                <td>@image.DislikeCounter</td>

                @if (isAuthorizedUser || isAdmin)
                {
                    <td>
                        <!-- Like and Dislike buttons -->
                        <div class="btn-group" role="group">
                            <form method="post" asp-action="LikeImage" asp-controller="Albums">
                                <input type="hidden" name="imageId" value="@image.Id" />
                                <input type="hidden" name="currentPage" value="@currentPage" />
                                <button type="submit" class="btn btn-success btn-sm">Like</button>
                            </form>
                            <form method="post" asp-action="DislikeImage" asp-controller="Albums">
                                <input type="hidden" name="imageId" value="@image.Id" />
                                <input type="hidden" name="currentPage" value="@currentPage" />
                                <button type="submit" class="btn btn-warning btn-sm">Dislike</button>
                            </form>

                            @if (isAdmin || Model.UserId == user!.Id)
                            {
                                <!-- Delete button -->
                                <form method="post" asp-action="DeleteImage" asp-controller="Albums" onsubmit="return confirm('Are you sure you want to delete this image?');">
                                    <input type="hidden" name="imageId" value="@image.Id" />
                                    <input type="hidden" name="currentPage" value="@currentPage" />
                                    <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                </form>
                            }
                        </div>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<!-- Pagination -->
<nav aria-label="Page navigation">
    <ul class="pagination">
        @for (int i = 1; i <= totalPages; i++)
        {
            <li class="page-item @(i == currentPage ? "active" : "")">
                @{
                    var routeValues = new RouteValueDictionary();
                    routeValues.Add("album.Id", Model.Id);
                    routeValues.Add("album.Title", Model.Title);
                    routeValues.Add("album.UserId", Model.UserId);
                    routeValues.Add("user.Id", user?.Id);
                    routeValues.Add("user.Login", user?.Login);
                    routeValues.Add("user.PasswordHash", user?.PasswordHash);
                    routeValues.Add("user.userType", user?.UserType);
                    routeValues.Add("page", i);
                }
                <a class="page-link" href="@Url.Action("AlbumView", "Albums", routeValues)">@i</a>
            </li>
        }
    </ul>
</nav>
